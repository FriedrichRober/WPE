gap> # Generated by dev/tests/centraliser/generate.g
gap> ReadPackage("WPE","tst/testCentraliser.g");;
gap> K := Group([ (1,2,3,4), (1,2) ]);;
gap> H := Group([ (1,2,3,4,5,6,7,8), (2,8)(3,7)(4,6) ]);;
gap> G := WreathProduct(K, H);;
gap> # Element 1
gap> g := ( 1,30)( 2,32, 4,29)( 3,31)( 5,25, 6,27, 8,28)( 7,26)( 9,21)(10,22,12,23,11,24)(13,20,15,17)(14,18,16,19);;
gap> Cgens := [ ( 1,30)( 2,32, 4,29)( 3,31)( 5,25, 6,27, 8,28)( 7,26)( 9,21)(10,22,12,23,11,24)(13,20,15,17)(14,18,16,19), ( 1, 3)(30,31), (14,16)(18,19), ( 2, 4)(29,32), (13,14)(15,16)(17,19)(18,20), (10,11,12)(22,24,23) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 2
gap> g := ( 1,17, 4,19, 3,20, 2,18)( 5,14, 8,15, 7,16)( 6,13)(21,30,24,29)(22,31)(23,32)(25,27)(26,28);;
gap> Cgens := [ ( 1,17, 4,19, 3,20, 2,18)( 5,14, 8,15, 7,16)( 6,13)(21,30,24,29)(22,31)(23,32)(25,27)(26,28), (25,27)(26,28), (25,28)(26,27), (11,12), (10,12,11), ( 9,11)(10,12), ( 9,12)(10,11), ( 9,10,11)(25,27), ( 9,10,11)(22,23)(25,26)(27,28)(31,32), ( 9,10,11)(21,24)(22,23)(25,26)(27,28)(29,30)(31,32) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 3
gap> g := ( 1,25,20,11)( 2,27,18,10)( 3,26,17,12, 4,28,19, 9)( 5,31,24,16, 8,32,22,15, 6,30,21,14, 7,29,23,13);;
gap> Cgens := [ ( 1,25,20,11)( 2,27,18,10)( 3,26,17,12, 4,28,19, 9)( 5,31,24,16, 8,32,22,15, 6,30,21,14, 7,29,23,13), ( 1, 2)(10,11)(18,20)(25,27), ( 1, 2)( 3, 4)( 9,12)(10,11)(17,19)(18,20)(25,27)(26,28) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 4
gap> g := ( 1, 5, 3, 6, 4, 8)( 2, 7)( 9,31,11,29,12,32)(10,30)(13,26,16,28)(14,27)(15,25)(17,21,18,22,20,23)(19,24);;
gap> Cgens := [ ( 1, 5, 3, 6, 4, 8)( 2, 7)( 9,31,11,29,12,32)(10,30)(13,26,16,28)(14,27)(15,25)(17,21,18,22,20,23)(19,24), (14,15)(25,27), ( 9,11,12)(14,15)(25,27)(29,32,31), ( 1, 3, 4)( 5, 6, 8)(14,15)(25,27) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 5
gap> g := ( 1,26)( 2,25, 3,27, 4,28)( 5,21, 6,23, 8,24, 7,22)( 9,18)(10,20)(11,17)(12,19)(13,14)(29,32,30,31);;
gap> Cgens := [ ( 1,26)( 2,25, 3,27, 4,28)( 5,21, 6,23, 8,24, 7,22)( 9,18)(10,20)(11,17)(12,19)(13,14)(29,32,30,31), (15,16), (10,12)(15,16)(19,20), ( 9,10)(15,16)(18,20), (13,14)(15,16), ( 9,10,11)(15,16)(17,18,20), ( 9,10,11)(15,16)(17,18,20)(29,30)(31,32), ( 9,10,11)(15,16)(17,18,20)(29,31,30,32) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 6
gap> g := ( 1,21,12,31,19, 7,28,15, 4,24,11,32,17, 5,25,13, 2,22,10,29,18, 6,27,14)( 3,23, 9,30,20, 8,26,16);;
gap> Cgens := [ ( 1,21,12,31,19, 7,28,15, 4,24,11,32,17, 5,25,13, 2,22,10,29,18, 6,27,14)( 3,23, 9,30,20, 8,26,16) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 7
gap> g := ( 1,16, 2,15, 4,14)( 3,13)( 5,11)( 6,10)( 7,12)( 8, 9)(17,30,18,31,19,32,20,29)(21,25,22,26)(23,27)(24,28);;
gap> Cgens := [ ( 1,16, 2,15, 4,14)( 3,13)( 5,11)( 6,10)( 7,12)( 8, 9)(17,30,18,31,19,32,20,29)(21,25,22,26)(23,27)(24,28), ( 6, 7)(10,12), ( 5, 6)(10,11), ( 5, 6, 7, 8)( 9,11,10,12), ( 5, 6, 7, 8)( 9,11,10,12)(23,24)(27,28), ( 5, 6, 7, 8)( 9,11,10,12)(21,22)(23,24)(25,26)(27,28) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 8
gap> g := ( 1,21,11,30,17, 8,27,13, 2,24,12,32,18, 7,25,15, 4,23,10,31,19, 5,28,14)( 3,22, 9,29,20, 6,26,16);;
gap> Cgens := [ ( 1,21,11,30,17, 8,27,13, 2,24,12,32,18, 7,25,15, 4,23,10,31,19, 5,28,14)( 3,22, 9,29,20, 6,26,16) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 9
gap> g := ( 1,25, 4,27)( 2,26, 3,28)( 5,24, 7,22, 6,21)( 8,23)( 9,19,10,20,12,18,11,17)(13,15,14,16)(30,32);;
gap> Cgens := [ ( 1,25, 4,27)( 2,26, 3,28)( 5,24, 7,22, 6,21)( 8,23)( 9,19,10,20,12,18,11,17)(13,15,14,16)(30,32), (29,31)(30,32), (29,31), (13,14)(15,16)(29,31), (13,15,14,16)(29,31), ( 1, 4)(25,27)(29,31), ( 1, 2)( 3, 4)(25,26)(27,28)(29,31) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 10
gap> g := ( 1, 2)( 3, 4)( 5, 7, 8)( 9,10,12)(13,15,14,16)(17,18)(26,27)(29,32,30,31);;
gap> Cgens := [ ( 1, 2)( 3, 4)( 5, 7, 8)( 9,10,12)(13,15,14,16)(17,18)(26,27)(29,32,30,31), (25,28)(26,27), (23,24), (22,24,23), (21,23)(22,24), (21,24)(22,23), (19,20), (3,4), (1,3)(2,4), (1,4)(2,3), (25,28), (17,18)(19,20)(21,22,23,24)(25,28), ( 5, 7, 8)(19,20)(21,22,23,24)(25,28), (13,14)(15,16)(19,20)(21,22,23,24)(25,28), (13,15,14,16)(19,20)(21,22,23,24)(25,28) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 11
gap> g := ( 1,21,11,30,18, 6,26,16)( 2,23,10,29,19, 8,27,13)( 3,24, 9,31,20, 7,25,15)( 4,22,12,32,17, 5,28,14);;
gap> Cgens := [ ( 1,21,11,30,18, 6,26,16)( 2,23,10,29,19, 8,27,13)( 3,24, 9,31,20, 7,25,15)( 4,22,12,32,17, 5,28,14), ( 1, 3)( 6, 7)( 9,11)(15,16)(18,20)(21,24)(25,26)(30,31), ( 1, 3, 4)( 5, 6, 7)( 9,12,11)(14,16,15)(17,18,20)(21,24,22)(25,28,26)(30,31,32), ( 1, 3, 4, 2)( 5, 8, 6, 7)( 9,12,10,11)(13,16,15,14)(17,19,18,20)(21,24,22,23)(25,28,27,26)(29,30,31,32) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 12
gap> g := ( 1,23, 4,24, 3,22, 2,21)( 5,17, 8,20)( 6,19, 7,18)( 9,13,12,15,10,14)(11,16)(25,32,26,29,28,31)(27,30);;
gap> Cgens := [ ( 1,23, 4,24, 3,22, 2,21)( 5,17, 8,20)( 6,19, 7,18)( 9,13,12,15,10,14)(11,16)(25,32,26,29,28,31)(27,30), ( 5, 8)(17,20), ( 5, 6)( 7, 8)(17,19)(18,20), ( 5, 6)( 7, 8)( 9,10,12)(13,14,15)(17,19)(18,20) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 13
gap> g := ( 1,27,18,12, 2,25,17,10)( 3,28,19,11, 4,26,20, 9)( 5,29,22,13, 7,32,24,16, 8,30,23,15, 6,31,21,14);;
gap> Cgens := [ ( 1,27,18,12, 2,25,17,10)( 3,28,19,11, 4,26,20, 9)( 5,29,22,13, 7,32,24,16, 8,30,23,15, 6,31,21,14), ( 1, 2)(10,12)(17,18)(25,27), ( 1, 3)( 2, 4)( 9,10)(11,12)(17,20)(18,19)(25,26)(27,28) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 14
gap> g := ( 1, 3, 2, 4)( 5, 8, 7)( 9,11,12)(13,14)(15,16)(17,19,20)(26,27)(29,30,32);;
gap> Cgens := [ ( 1, 3, 2, 4)( 5, 8, 7)( 9,11,12)(13,14)(15,16)(17,19,20)(26,27)(29,30,32), (25,28)(26,27), (23,24), (22,24,23), (21,23)(22,24), (21,24)(22,23), (15,16), (13,15)(14,16), (13,16)(14,15), (25,28), (17,19,20), ( 9,11,12), (29,30,32) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 15
gap> g := ( 1,10, 4,11, 2, 9)( 3,12)( 5, 7, 8)(13,31)(14,30,15,29,16,32)(17,28)(18,27,19,25)(20,26)(21,23)(22,24);;
gap> Cgens := [ ( 1,10, 4,11, 2, 9)( 3,12)( 5, 7, 8)(13,31)(14,30,15,29,16,32)(17,28)(18,27,19,25)(20,26)(21,23)(22,24), (21,23)(22,24), (21,24)(22,23), (22,24), (17,20)(26,28), ( 5, 7, 8)(17,20)(26,28), ( 1, 2, 4)( 9,11,10)(17,20)(26,28) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 16
gap> g := ( 1,19, 4,20)( 2,17)( 3,18)( 5,14, 7,15, 8,13, 6,16)( 9,10,12,11)(21,32)(22,29,24,30,23,31)(25,26,27,28);;
gap> Cgens := [ ( 1,19, 4,20)( 2,17)( 3,18)( 5,14, 7,15, 8,13, 6,16)( 9,10,12,11)(21,32)(22,29,24,30,23,31)(25,26,27,28), (25,27)(26,28), ( 9,12)(10,11), ( 2, 3)(17,18), ( 1, 4)(19,20), ( 9,10,12,11), (25,26,27,28) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 17
gap> g := ( 1,22,11,31,19, 8,27,13)( 2,23,10,32,20, 5,26,14, 4,24, 9,30,18, 6,25,15)( 3,21,12,29,17, 7,28,16);;
gap> Cgens := [ ( 1,22,11,31,19, 8,27,13)( 2,23,10,32,20, 5,26,14, 4,24, 9,30,18, 6,25,15)( 3,21,12,29,17, 7,28,16), ( 1, 3)( 7, 8)(11,12)(13,16)(17,19)(21,22)(27,28)(29,31) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 18
gap> g := ( 1,31, 3,29)( 2,30)( 4,32)( 5,28, 7,25, 6,26)( 8,27)( 9,21,12,22)(10,24)(11,23)(13,18,14,17,15,20,16,19);;
gap> Cgens := [ ( 1,31, 3,29)( 2,30)( 4,32)( 5,28, 7,25, 6,26)( 8,27)( 9,21,12,22)(10,24)(11,23)(13,18,14,17,15,20,16,19), ( 2, 4)(30,32), (10,11)(23,24), ( 9,12)(10,11)(21,22)(23,24), ( 1, 3)(10,11)(23,24)(29,31) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 19
gap> g := ( 1,13,28, 8,19,29,11,24, 2,15,26, 7,20,31,10,21, 3,16,27, 5,18,32,12,23, 4,14,25, 6,17,30, 9,22);;
gap> Cgens := [ ( 1,13,28, 8,19,29,11,24, 2,15,26, 7,20,31,10,21, 3,16,27, 5,18,32,12,23, 4,14,25, 6,17,30, 9,22) ];;
gap> TestCentraliser(G, g, Cgens);
true
gap> # Element 20
gap> g := ( 1, 5, 2, 8, 3, 6, 4, 7)( 9,31,12,30,10,29)(11,32)(13,28,14,27,16,26,15,25)(17,23,18,22,20,21)(19,24);;
gap> Cgens := [ ( 1, 5, 2, 8, 3, 6, 4, 7)( 9,31,12,30,10,29)(11,32)(13,28,14,27,16,26,15,25)(17,23,18,22,20,21)(19,24), (17,18,20)(21,23,22), (13,14,16,15)(25,28,27,26) ];;
gap> TestCentraliser(G, g, Cgens);
true
