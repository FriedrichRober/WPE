  
  [1X1 [33X[0;0YIntroduction[133X[101X
  
  [33X[0;0YThis  chapter  serves  as  an  introduction and explains the notation of the
  package [5XWPE[105X.[133X
  
  
  [1X1.1 [33X[0;0YOverview[133X[101X
  
  [33X[0;0YThe   package  [5XWPE[105X  is  about  wreath  product  elements  in  their  generic
  representation.  This  representation  is  more  intuitive  to the User when
  working  with  wreath  products  and  additionally  may  have  computational
  benefits over other representations.[133X
  
  [33X[0;0YIn   particular   this   package  provides  efficient  methods  for  finding
  conjugating    elements,    conjugacy   classes,   and   centralisers.   The
  implementations are based on [BNRW21] and references therein. For a complete
  list of operations that exploit the generic representation, see Chapter [14X4[114X.[133X
  
  [33X[0;0YFor  example, the computation of all [22X886640[122X conjugacy classses of the wreath
  product [22XW = M_22 â‰€ A_9[122X takes about 12 seconds with [5XWPE[105X. With native [5XGAP[105X this
  computation is not feasible.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("WPE");;[127X[104X
    [4X[25Xgap>[125X [27XK := MathieuGroup(22);;[127X[104X
    [4X[25Xgap>[125X [27XH := AlternatingGroup(9);;[127X[104X
    [4X[25Xgap>[125X [27XG := WreathProduct(K, H);;[127X[104X
    [4X[25Xgap>[125X [27XC := ConjugacyClasses(G);;[127X[104X
    [4X[25Xgap>[125X [27XSize(C);[127X[104X
    [4X[28X886640[128X[104X
  [4X[32X[104X
  
  
  [1X1.2 [33X[0;0YNotation[133X[101X
  
  [33X[0;0YLet  [22XG = K â‰€ H[122X be a wreath product, where [22XH[122X is a permutation group of degree
  [22Xm[122X.  The  wreath product is defined as the semidirect product of the function
  space [22XK^m[122X with [22XH[122X, where [22XÏ€ âˆˆ H[122X acts on [22Xf âˆˆ K^m[122X by setting [22Xf^{Ï€} : {1, ..., m}
  â†’ K, i â†¦ [(i)Ï€^{-1}]f[122X. We denote the parent wreath product by [22XP = K â‰€ Sym(m)
  â‰¥ G[122X.[133X
  
  [33X[0;0YFormally  we  can write an element of [22XG[122X as a tuple [22Xg = (f, Ï€) âˆˆ G[122X, where [22Xf âˆˆ
  K^m[122X is a function [22Xf : {1, ..., m} â†’ K[122X and [22XÏ€ âˆˆ H â‰¤ Sym(m)[122X is a permutation on
  [22Xm[122X points. We call [22Xf[122X the [13Xbase component[113X and [22XÏ€[122X the [13Xtop component[113X of [22Xg[122X.[133X
  
  [33X[0;0YWe  can naturally identify a map [22Xf âˆˆ K^m[122X with a tuple [22X(g_1, ..., g_m)[122X, where
  each  [22Xg_i  âˆˆ K[122X is the image of [22Xi âˆˆ {1, ..., m}[122X under [22Xf[122X. This yields a second
  useful  notation  for  elements in [22XG[122X by writing [22Xg = (g_1, ..., g_m; Ï€)[122X. Note
  that  we  use  a  semicolon  to  seperate  the  base  component from the top
  component. Further we call the element [22Xg_i[122X the [13X[22Xi[122X-th base component[113X of [22Xg[122X.[133X
  
  [33X[0;0YAnalogous,  the subgroup [22XB = K^m Ã— âŸ¨ 1_H âŸ© â‰¤ G[122X is called the [13Xbase group[113X of [22XG[122X
  and the subgroup [22XT = âŸ¨ 1_K âŸ©^m Ã— H â‰¤ G[122X is called the [13Xtop group[113X of [22XG[122X.[133X
  
  
  [1X1.3 [33X[0;0YWreath Cycle Decomposition[133X[101X
  
  [33X[0;0YIn   a  permutation  group  we  have  the  well-known  concept  of  a  cycle
  decomposition.  For  wreath products we have a similar concept called [13Xwreath
  cycle decomposition[113X that allows us to solve certain computational tasks more
  efficiently.[133X
  
  [33X[0;0YDetailed  information on [13Xwreath cycle decompositions[113X can be found in Chapter
  2  in [BNRW21]. Chapters 3-5 in [BNRW21] describe how these can be exploited
  for  finding  conjugating elements, conjugacy classes, and centralisers, and
  Chapter  6  in  [BNRW21]  contains a table of timings of sample computations
  done with [5XWPE[105X vs. native [5XGAP[105X.[133X
  
  [33X[0;0YWe use the notation from [14X1.2[114X in order to introduce the following concepts.[133X
  
  [33X[0;0Y[22XDefinition:[122X We define the [13Xterritory[113X of an element [22Xg = (g_1, ..., g_m; Ï€) âˆˆ G[122X
  by  [22Xterr(g)  :=  supp(Ï€)  âˆª  {i : g_i â‰  1}[122X, where [22Xsupp(Ï€)[122X denotes the set of
  moved points of [22XÏ€[122X.[133X
  
  [33X[0;0Y[22XDefinition:[122X  Two  elements  [22Xg,  h  âˆˆ  G[122X  are  said  to  be [13Xdisjoint[113X if their
  territories are disjoint.[133X
  
  [33X[0;0Y[22XLemma:[122X Disjoint elements in [22XG[122X commute.[133X
  
  [33X[0;0Y[22XDefinition:[122X  An  element [22Xg = (g_1, ..., g_m; Ï€) âˆˆ G[122X is called a [13Xwreath cycle[113X
  if either [22XÏ€[122X is a cycle and [22Xterr(g) = supp(Ï€)[122X, or [22X|terr(g)| = 1[122X.[133X
  
  [33X[0;0Y[22XExample:[122X  For example if we consider the wreath product [22XSym(4) â‰€ Sym(5)[122X, the
  element[133X
  
  
  [24X[33X[0;6Y( (), (1,2,3), (), (1,2), (); (1,2,4) )[133X[124X
  
  [33X[0;0Yis a wreath cycle as described in the first case and the element[133X
  
  
  [24X[33X[0;6Y( (), (), (1,3), (), (); () )[133X[124X
  
  [33X[0;0Yis  a wreath cycle as described in the second case. Moreover, these elements
  are disjoint and thus commute.[133X
  
  [33X[0;0Y[22XTheorem:[122X  Every  element of [22XG[122X can be written as a finite product of disjoint
  wreath  cycles  in  [22XP[122X.  This  decomposition  is unique up to ordering of the
  factors. We call such a decomposition a [13Xwreath cycle decomposition[113X.[133X
  
  
  [1X1.4 [33X[0;0YSparse Wreath Cycle[133X[101X
  
  [33X[0;0YWe use the notation from [14X1.2[114X in order to introduce the following concepts.[133X
  
  [33X[0;0YThe  main  motivation for introducing the concept of [13Xsparse wreath cycles[113X is
  the efficient computation of centralisers of wreath product elements. Simply
  put,  we  compute  the  centraliser  of  an  arbitrary element [22Xg âˆˆ P[122X in [22XG[122X by
  conjugating  it to a restricted representative [22Xh = g^c âˆˆ P[122X and computing the
  centraliser  of [22Xh[122X in [22XG[122X. The wreath cycle decomposition of the representative
  [22Xh[122X consists only of sparse wreath cycles.[133X
  
  [33X[0;0YMore  information on [13Xsparse wreath cycles[113X and centralisers of wreath product
  elements can be found in Chapter 5 in [BNRW21].[133X
  
  [33X[0;0Y[22XDefinition:[122X  We  say  that  a  wreath  cycle [22Xg = (g_1, ..., g_m; Ï€) âˆˆ G[122X is a
  [13Xsparse  wreath  cycle[113X,  if there exists an [22Xi_0[122X such that [22Xg_i = 1[122X for all [22Xi â‰ 
  i_0[122X.[133X
  
  [33X[0;0Y[22XExample:[122X  For example if we consider the wreath product [22XSym(4) â‰€ Sym(5)[122X, the
  element[133X
  
  
  [24X[33X[0;6Y( (), (1,2,3), (), (), (); (1,2,4) )[133X[124X
  
  [33X[0;0Yis a sparse wreath cycle, as well as the element[133X
  
  
  [24X[33X[0;6Y( (), (), (1,3), (), (); () ) .[133X[124X
  
  [33X[0;0Y[22XTheorem:[122X Every element [22Xg âˆˆ P[122X can be conjugated by some [22Xc âˆˆ K^m Ã— âŸ¨ 1_H âŸ© â‰¤ P[122X
  to  an  element  [22Xh  =  g^c âˆˆ P[122X such that the wreath cycle decomposition of [22Xh[122X
  consists only of sparse wreath cycles.[133X
  
  
  [1X1.5 [33X[0;0YExample[133X[101X
  
  [33X[0;0YIn  this section we present an example session which demonstrates how we can
  access the generic representation of a wreath product.[133X
  
  [33X[0;0YFirst  we  construct the wreath product [22XG = Alt(5) â‰€ Sym(7)[122X. For this we use
  the native [5XGAP[105X command [10XWreathProduct[110X (see [14X'Reference: Wreath Products'[114X). The
  resulting  group is embedded into a symmetric group on [22X5 â‹… 7 = 35[122X points via
  the imprimitive action of the wreath product. The size of the group is[133X
  
  
  [24X[33X[0;6Y| G | = |Alt(5)|^7 â‹… |Sym(7)| = 60^7 â‹… 5040 = 14108774400000000 .[133X[124X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XK := AlternatingGroup(5);;[127X[104X
    [4X[25Xgap>[125X [27XH := SymmetricGroup(7);;[127X[104X
    [4X[25Xgap>[125X [27XG := WreathProduct(K, H);[127X[104X
    [4X[28X<permutation group of size 14108774400000000 with 4 generators>[128X[104X
  [4X[32X[104X
  
  [33X[0;0YNow  we  construct  an  isomorphism  to  a  wreath  product given in generic
  representation  that  is  provided  in  [5XWPE[105X.  For  this, we need to load the
  package.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("WPE");;[127X[104X
    [4X[25Xgap>[125X [27Xiso := IsomorphismToGenericWreathProduct(G);;[127X[104X
    [4X[25Xgap>[125X [27XW := Image(iso);[127X[104X
    [4X[28X<group of size 14108774400000000 with 4 generators>[128X[104X
  [4X[32X[104X
  
  [33X[0;0YLet  us  compare how [5XGAP[105X displays elements in [22XG[122X and [22XW[122X respectively. Elements
  in  [22XG[122X  are represented as permutations. In this representation it is hard to
  see how the base and top components of this element look like.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg := (1,13,3,14,4,12,2,15,5,11)[127X[104X
    [4X[25X>[125X [27X        (6,31,21,7,35,25,9,33,23,8,34,24,10,32,22)[127X[104X
    [4X[25X>[125X [27X        (18,19,20);;[127X[104X
    [4X[25Xgap>[125X [27Xg in G;[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YElements  in  [22XW[122X  however are represented as generic wreath product elements.
  (see  [14X1.2[114X)  This  allows us to easily read off the base and top component of
  the  element  by  either  printing  or displaying the element. Otherwise, by
  default  the  element  is viewed in compressed form. (see [14X3.4[114X) This printing
  behaviour is similar to matrices in [5XGAP[105X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xx := g ^ iso;[127X[104X
    [4X[28X< wreath product element with 7 base components >[128X[104X
    [4X[25Xgap>[125X [27XPrint(x);[127X[104X
    [4X[28X( (1,3,4,2,5), (2,5)(3,4), (), (3,4,5), (1,2)(4,5), (), (); (1,3)(2,7,5) )[128X[104X
    [4X[25Xgap>[125X [27XDisplay(x);[127X[104X
    [4X[28X       1           2       3      4         5       6   7       top     [128X[104X
    [4X[28X( (1,3,4,2,5), (2,5)(3,4), (), (3,4,5), (1,2)(4,5), (), (); (1,3)(2,7,5) )[128X[104X
  [4X[32X[104X
  
  [33X[0;0YFurthermore,  we  can  display  each  component  easily  with  the  provided
  commands.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XBaseComponentOfWreathProductElement(x, 2);[127X[104X
    [4X[28X(2,5)(3,4)[128X[104X
    [4X[25Xgap>[125X [27XTopComponentOfWreathProductElement(x);[127X[104X
    [4X[28X(1,3)(2,7,5)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YNext,  we  compute the territory of [22Xx[122X, i.e. the analogue of the support of a
  permutation.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XTerritory(x);[127X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 7 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YFinally,  let  us compute the disjoint wreath cycle decomposition of [22Xx[122X, i.e.
  the analogue of the disjoint cycle decomposition of a permutation.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XwreathDecomp := WreathCycleDecomposition(x);;[127X[104X
    [4X[25Xgap>[125X [27XPrint(wreathDecomp);[127X[104X
    [4X[28X[ ( (), (), (), (3,4,5), (), (), (); () ), [128X[104X
    [4X[28X  ( (1,3,4,2,5), (), (), (), (), (), (); (1,3) ), [128X[104X
    [4X[28X  ( (), (2,5)(3,4), (), (), (1,2)(4,5), (), (); (2,7,5) ) ][128X[104X
  [4X[32X[104X
  
